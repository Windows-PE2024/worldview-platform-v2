{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u7F16\\u7A0B\\u9879\\u76EE\\\\Nood.js\\\\world\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\n// 创建上下文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// 初始状态\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true\n};\n\n// Action 类型\nconst AUTH_SUCCESS = 'AUTH_SUCCESS';\nconst AUTH_FAILURE = 'AUTH_FAILURE';\nconst LOGOUT = 'LOGOUT';\nconst USER_LOADED = 'USER_LOADED';\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        loading: false\n      };\n    case AUTH_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false\n      };\n    case AUTH_FAILURE:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// 设置请求头\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Provider 组件\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // 加载用户\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get('/api/auth/me');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_FAILURE\n      });\n    }\n  };\n\n  // 注册\n  const register = async formData => {\n    try {\n      const res = await axios.post('/api/auth/register', formData);\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: res.data\n      });\n      setAuthToken(res.data.token);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      dispatch({\n        type: AUTH_FAILURE\n      });\n      return {\n        success: false,\n        errors: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.errors) || [{\n          msg: '注册失败'\n        }]\n      };\n    }\n  };\n\n  // 登录\n  const login = async formData => {\n    try {\n      const res = await axios.post('/api/auth/login', formData);\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: res.data\n      });\n      setAuthToken(res.data.token);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      dispatch({\n        type: AUTH_FAILURE\n      });\n      return {\n        success: false,\n        errors: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.errors) || [{\n          msg: '登录失败'\n        }]\n      };\n    }\n  };\n\n  // 登出\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n    setAuthToken(null);\n  };\n\n  // 更新用户信息\n  const updateUser = userData => {\n    dispatch({\n      type: USER_LOADED,\n      payload: userData\n    });\n  };\n\n  // 初始化\n  useEffect(() => {\n    loadUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      register,\n      login,\n      logout,\n      loadUser,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n// 自定义 Hook\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","initialState","isAuthenticated","user","token","localStorage","getItem","loading","AUTH_SUCCESS","AUTH_FAILURE","LOGOUT","USER_LOADED","authReducer","state","action","type","payload","setItem","removeItem","setAuthToken","defaults","headers","common","AuthProvider","children","_s","dispatch","loadUser","res","get","data","err","register","formData","post","success","_err$response","_err$response$data","errors","response","msg","login","_err$response2","_err$response2$data","logout","updateUser","userData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/编程项目/Nood.js/world/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\n// 创建上下文\nconst AuthContext = createContext();\n\n// 初始状态\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true\n};\n\n// Action 类型\nconst AUTH_SUCCESS = 'AUTH_SUCCESS';\nconst AUTH_FAILURE = 'AUTH_FAILURE';\nconst LOGOUT = 'LOGOUT';\n  const USER_LOADED = 'USER_LOADED';\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        loading: false\n      };\n    case AUTH_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false\n      };\n    case AUTH_FAILURE:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// 设置请求头\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Provider 组件\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // 加载用户\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth/me');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_FAILURE\n      });\n    }\n  };\n\n  // 注册\n  const register = async (formData) => {\n    try {\n      const res = await axios.post('/api/auth/register', formData);\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: res.data\n      });\n      setAuthToken(res.data.token);\n      return { success: true };\n    } catch (err) {\n      dispatch({\n        type: AUTH_FAILURE\n      });\n      return { \n        success: false, \n        errors: err.response?.data?.errors || [{ msg: '注册失败' }] \n      };\n    }\n  };\n\n  // 登录\n  const login = async (formData) => {\n    try {\n      const res = await axios.post('/api/auth/login', formData);\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: res.data\n      });\n      setAuthToken(res.data.token);\n      return { success: true };\n    } catch (err) {\n      dispatch({\n        type: AUTH_FAILURE\n      });\n      return { \n        success: false, \n        errors: err.response?.data?.errors || [{ msg: '登录失败' }] \n      };\n    }\n  };\n\n  // 登出\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n    setAuthToken(null);\n  };\n\n  // 更新用户信息\n  const updateUser = (userData) => {\n    dispatch({\n      type: USER_LOADED,\n      payload: userData\n    });\n  };\n\n  // 初始化\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...state,\n        register,\n        login,\n        logout,\n        loadUser,\n        updateUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// 自定义 Hook\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}