{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u7F16\\u7A0B\\u9879\\u76EE\\\\Nood.js\\\\world\\\\client\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// 创建上下文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// 提供者组件\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // 从localStorage获取主题设置，默认为暗色模式\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme ? savedTheme === 'dark' : true; // 默认为暗色模式\n  });\n\n  // 切换主题\n  const toggleTheme = () => {\n    setIsDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('theme', newMode ? 'dark' : 'light');\n      return newMode;\n    });\n  };\n\n  // 应用主题到document\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark-mode');\n      document.documentElement.classList.remove('light-mode');\n    } else {\n      document.documentElement.classList.add('light-mode');\n      document.documentElement.classList.remove('dark-mode');\n    }\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n// 自定义Hook\n_s(ThemeProvider, \"VyUZbpn8v0DmKp9bOGIL9N81r1w=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","toggleTheme","prevMode","newMode","setItem","document","documentElement","classList","add","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["D:/编程项目/Nood.js/world/client/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\n// 创建上下文\nconst ThemeContext = createContext();\n\n// 提供者组件\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // 从localStorage获取主题设置，默认为暗色模式\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme ? savedTheme === 'dark' : true; // 默认为暗色模式\n  });\n\n  // 切换主题\n  const toggleTheme = () => {\n    setIsDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('theme', newMode ? 'dark' : 'light');\n      return newMode;\n    });\n  };\n\n  // 应用主题到document\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark-mode');\n      document.documentElement.classList.remove('light-mode');\n    } else {\n      document.documentElement.classList.add('light-mode');\n      document.documentElement.classList.remove('dark-mode');\n    }\n  }, [isDarkMode]);\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// 自定义Hook\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n\nexport default ThemeContext;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACjD;IACA,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGA,UAAU,KAAK,MAAM,GAAG,IAAI,CAAC,CAAC;EACpD,CAAC,CAAC;;EAEF;EACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBJ,aAAa,CAACK,QAAQ,IAAI;MACxB,MAAMC,OAAO,GAAG,CAACD,QAAQ;MACzBH,YAAY,CAACK,OAAO,CAAC,OAAO,EAAED,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;MACzD,OAAOA,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACd,IAAIO,UAAU,EAAE;MACdS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MACnDH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;IACzD,CAAC,MAAM;MACLJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;MACpDH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IACxD;EACF,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,oBACEL,OAAA,CAACC,YAAY,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,UAAU;MAAEK;IAAY,CAAE;IAAAP,QAAA,EACvDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAApB,EAAA,CAlCaF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAmC1B,OAAO,MAAMwB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,OAAO/B,UAAU,CAACK,YAAY,CAAC;AACjC,CAAC;AAAC0B,GAAA,CAFWD,QAAQ;AAIrB,eAAezB,YAAY;AAAC,IAAAwB,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}