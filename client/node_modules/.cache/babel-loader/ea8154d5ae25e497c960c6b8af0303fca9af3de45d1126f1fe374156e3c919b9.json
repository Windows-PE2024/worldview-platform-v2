{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000';\nexport const API_ENDPOINTS = {\n  WORLDVIEWS: `${API_BASE_URL}/api/worldviews`,\n  AUTH: `${API_BASE_URL}/api/auth`,\n  USERS: `${API_BASE_URL}/api/users`,\n  COMMENTS: `${API_BASE_URL}/api/comments`,\n  UPLOAD: `${API_BASE_URL}/api/upload`\n};\nexport const apiRequest = async (url, options = {}) => {\n  const defaultOptions = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const mergedOptions = {\n    ...defaultOptions,\n    ...options,\n    headers: {\n      ...defaultOptions.headers,\n      ...options.headers\n    }\n  };\n\n  // 如果有token，添加到请求头\n  const token = localStorage.getItem('token');\n  if (token) {\n    mergedOptions.headers.Authorization = `Bearer ${token}`;\n  }\n  try {\n    const response = await fetch(url, mergedOptions);\n\n    // 检查响应是否为JSON\n    const contentType = response.headers.get('content-type');\n    if (!contentType || !contentType.includes('application/json')) {\n      throw new Error(`Expected JSON response but got ${contentType}`);\n    }\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Something went wrong');\n    }\n    return data;\n  } catch (error) {\n    console.error('API request error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","API_ENDPOINTS","WORLDVIEWS","AUTH","USERS","COMMENTS","UPLOAD","apiRequest","url","options","defaultOptions","headers","mergedOptions","token","localStorage","getItem","Authorization","response","fetch","contentType","get","includes","Error","data","json","ok","message","error","console"],"sources":["D:/编程项目/Nood.js/world/client/src/utils/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000';\n\nexport const API_ENDPOINTS = {\n  WORLDVIEWS: `${API_BASE_URL}/api/worldviews`,\n  AUTH: `${API_BASE_URL}/api/auth`,\n  USERS: `${API_BASE_URL}/api/users`,\n  COMMENTS: `${API_BASE_URL}/api/comments`,\n  UPLOAD: `${API_BASE_URL}/api/upload`\n};\n\nexport const apiRequest = async (url, options = {}) => {\n  const defaultOptions = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const mergedOptions = {\n    ...defaultOptions,\n    ...options,\n    headers: {\n      ...defaultOptions.headers,\n      ...options.headers,\n    },\n  };\n\n  // 如果有token，添加到请求头\n  const token = localStorage.getItem('token');\n  if (token) {\n    mergedOptions.headers.Authorization = `Bearer ${token}`;\n  }\n\n  try {\n    const response = await fetch(url, mergedOptions);\n    \n    // 检查响应是否为JSON\n    const contentType = response.headers.get('content-type');\n    if (!contentType || !contentType.includes('application/json')) {\n      throw new Error(`Expected JSON response but got ${contentType}`);\n    }\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      throw new Error(data.message || 'Something went wrong');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('API request error:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,aAAa,GAAG;EAC3BC,UAAU,EAAE,GAAGF,YAAY,iBAAiB;EAC5CG,IAAI,EAAE,GAAGH,YAAY,WAAW;EAChCI,KAAK,EAAE,GAAGJ,YAAY,YAAY;EAClCK,QAAQ,EAAE,GAAGL,YAAY,eAAe;EACxCM,MAAM,EAAE,GAAGN,YAAY;AACzB,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACrD,MAAMC,cAAc,GAAG;IACrBC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,MAAMC,aAAa,GAAG;IACpB,GAAGF,cAAc;IACjB,GAAGD,OAAO;IACVE,OAAO,EAAE;MACP,GAAGD,cAAc,CAACC,OAAO;MACzB,GAAGF,OAAO,CAACE;IACb;EACF,CAAC;;EAED;EACA,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,aAAa,CAACD,OAAO,CAACK,aAAa,GAAG,UAAUH,KAAK,EAAE;EACzD;EAEA,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,EAAEI,aAAa,CAAC;;IAEhD;IACA,MAAMO,WAAW,GAAGF,QAAQ,CAACN,OAAO,CAACS,GAAG,CAAC,cAAc,CAAC;IACxD,IAAI,CAACD,WAAW,IAAI,CAACA,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;MAC7D,MAAM,IAAIC,KAAK,CAAC,kCAAkCH,WAAW,EAAE,CAAC;IAClE;IAEA,MAAMI,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIH,KAAK,CAACC,IAAI,CAACG,OAAO,IAAI,sBAAsB,CAAC;IACzD;IAEA,OAAOH,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}